{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Create from \"./crud/Create\";\nimport Read from \"./crud/Read\";\nimport { StatusBar } from 'expo-status-bar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    refreshKey = _useState2[0],\n    setRefreshKey = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    issues = _useState4[0],\n    setIssues = _useState4[1];\n  useEffect(function () {\n    fetchIssues();\n  }, [refreshKey]);\n  var fetchIssues = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.get('https://crudcrud.com/api/1ec73a99fe1b4ce8847935104fa42b4f/read');\n        if (response.status === 200) {\n          setIssues(response.data);\n        } else {\n          console.error('Failed to fetch issues. Status:', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching issues:', error.message);\n      }\n    });\n    return function fetchIssues() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var refreshRead = function refreshRead() {\n    setRefreshKey(function (prevKey) {\n      return prevKey + 1;\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"IssueLogger\"\n    }), _jsx(Create, {\n      refreshRead: refreshRead\n    }), _jsx(Read, {\n      fetchedData: issues,\n      refreshKey: refreshKey\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F2E3DB',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#263A29'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Create","Read","StatusBar","App","refreshKey","setRefreshKey","issues","setIssues","fetchIssues","response","axios","get","status","data","console","error","message","refreshRead","prevKey","styles","container","title","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","marginBottom","color"],"sources":["/home/dom/React-native-IsuesLoger/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport Create from './crud/Create';\nimport Read from './crud/Read';\nimport { StatusBar } from 'expo-status-bar';\n\nexport default function App() {\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [issues, setIssues] = useState([]);\n\n  useEffect(() => {\n    fetchIssues();\n  }, [refreshKey]);\n\n  const fetchIssues = async () => {\n    try {\n      const response = await axios.get('https://crudcrud.com/api/1ec73a99fe1b4ce8847935104fa42b4f/read');\n      if (response.status === 200) {\n        setIssues(response.data);\n      } else {\n        console.error('Failed to fetch issues. Status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching issues:', error.message);\n    }\n  };\n\n  const refreshRead = () => {\n    setRefreshKey((prevKey) => prevKey + 1);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>IssueLogger</Text>\n      <Create refreshRead={refreshRead} />\n      <Read fetchedData={issues} refreshKey={refreshKey} />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F2E3DB',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#263A29',\n  },\n});"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAEnD,OAAOC,MAAM;AACb,OAAOC,IAAI;AACX,SAASC,SAAS,QAAQ,iBAAiB;AAAC;AAAA;AAE5C,eAAe,SAASC,GAAG,GAAG;EAC5B,gBAAoCJ,QAAQ,CAAC,CAAC,CAAC;IAAA;IAAxCK,UAAU;IAAEC,aAAa;EAChC,iBAA4BN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjCO,MAAM;IAAEC,SAAS;EAExBT,SAAS,CAAC,YAAM;IACdU,WAAW,EAAE;EACf,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,IAAMI,WAAW;IAAA,6BAAG,aAAY;MAC9B,IAAI;QACF,IAAMC,QAAQ,SAASC,KAAK,CAACC,GAAG,CAAC,gEAAgE,CAAC;QAClG,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;UAC3BL,SAAS,CAACE,QAAQ,CAACI,IAAI,CAAC;QAC1B,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEN,QAAQ,CAACG,MAAM,CAAC;QACnE;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACxD;IACF,CAAC;IAAA,gBAXKR,WAAW;MAAA;IAAA;EAAA,GAWhB;EAED,IAAMS,WAAW,GAAG,SAAdA,WAAW,GAAS;IACxBZ,aAAa,CAAC,UAACa,OAAO;MAAA,OAAKA,OAAO,GAAG,CAAC;IAAA,EAAC;EACzC,CAAC;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,KAAM;MAAA,UAAC;IAAW,EAAO,EAC7C,KAAC,MAAM;MAAC,WAAW,EAAEJ;IAAY,EAAG,EACpC,KAAC,IAAI;MAAC,WAAW,EAAEX,MAAO;MAAC,UAAU,EAAEF;IAAW,EAAG,EACrD,KAAC,SAAS;MAAC,KAAK,EAAC;IAAM,EAAG;EAAA,EACrB;AAEX;AAEA,IAAMe,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDN,KAAK,EAAE;IACLO,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}