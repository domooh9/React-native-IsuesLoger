{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from 'axios';\nimport Update from \"./Update\";\nimport Updatestyle from \"../style/Updatestyle\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Menu, MenuTrigger, MenuOptions, MenuOption } from 'react-native-popup-menu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Read = function Read(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    issues = _useState2[0],\n    setIssues = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedIssue = _useState4[0],\n    setSelectedIssue = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshKey = _useState6[0],\n    setRefreshKey = _useState6[1];\n  useEffect(function () {\n    fetchIssues();\n  }, [refreshKey]);\n  var fetchIssues = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.get('https://crudcrud.com/api/24c4607bd64f47aea54d99701af5e0eb/read');\n        if (response.status === 200) {\n          setIssues(response.data);\n        } else {\n          Alert.alert('Error', 'Failed to fetch issues');\n        }\n      } catch (error) {\n        console.error('Error fetching issues:', error);\n        Alert.alert('Error', 'An error occurred');\n      }\n    });\n    return function fetchIssues() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var deleteIssue = function () {\n    var _ref3 = _asyncToGenerator(function* (id) {\n      try {\n        var response = yield axios.delete(`https://crudcrud.com/api/24c4607bd64f47aea54d99701af5e0eb/read/${id}`);\n        if (response.status === 200) {\n          fetchIssues();\n        } else {\n          Alert.alert('Error', 'Failed to delete issue');\n        }\n      } catch (error) {\n        console.error('Error deleting issue:', error);\n        Alert.alert('Error', 'An error occurred while deleting the issue');\n      }\n    });\n    return function deleteIssue(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleUpdatePress = function handleUpdatePress(issueId) {\n    setSelectedIssue(issueId);\n  };\n  var handleCancelUpdate = function handleCancelUpdate() {\n    setSelectedIssue(null);\n  };\n  var handleRefresh = function handleRefresh() {\n    setRefreshKey(function (prevKey) {\n      return prevKey + 1;\n    });\n  };\n  return _jsxs(View, {\n    style: Updatestyle.container,\n    children: [_jsx(Text, {\n      style: Updatestyle.heading,\n      children: \"Issues:\"\n    }), _jsx(FlatList, {\n      data: issues,\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      },\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsxs(View, {\n          style: Updatestyle.issueContainer,\n          children: [_jsx(Text, {\n            style: Updatestyle.issueText,\n            children: item.text\n          }), _jsxs(Menu, {\n            children: [_jsx(MenuTrigger, {\n              children: _jsx(TouchableOpacity, {\n                children: _jsx(Icon, {\n                  name: \"ellipsis-v\",\n                  size: 20,\n                  color: \"black\"\n                })\n              })\n            }), _jsxs(MenuOptions, {\n              children: [_jsx(MenuOption, {\n                onSelect: function onSelect() {\n                  return handleUpdatePress(item._id);\n                },\n                text: \"Update\",\n                children: _jsx(Text, {\n                  style: Updatestyle.menuOption,\n                  children: _jsx(Icon, {\n                    name: \"pencil\",\n                    size: 15,\n                    color: \"black\"\n                  })\n                })\n              }), _jsx(MenuOption, {\n                onSelect: function onSelect() {\n                  return deleteIssue(item._id);\n                },\n                text: \"Delete\",\n                children: _jsx(Text, {\n                  style: Updatestyle.menuOption,\n                  children: _jsx(Icon, {\n                    name: \"trash-o\",\n                    size: 15,\n                    color: \"red\"\n                  })\n                })\n              })]\n            })]\n          })]\n        });\n      }\n    }), _jsx(TouchableOpacity, {\n      style: Updatestyle.refreshButton,\n      onPress: handleRefresh,\n      children: _jsx(Text, {\n        style: Updatestyle.buttonText,\n        children: \"Refresh\"\n      })\n    }), selectedIssue && _jsx(Update, {\n      issueId: selectedIssue,\n      refreshRead: handleRefresh,\n      onCancel: handleCancelUpdate\n    })]\n  });\n};\nexport default Read;","map":{"version":3,"names":["React","useEffect","useState","axios","Update","Updatestyle","Icon","Menu","MenuTrigger","MenuOptions","MenuOption","Read","navigation","issues","setIssues","selectedIssue","setSelectedIssue","refreshKey","setRefreshKey","fetchIssues","response","get","status","data","Alert","alert","error","console","deleteIssue","id","delete","handleUpdatePress","issueId","handleCancelUpdate","handleRefresh","prevKey","container","heading","item","_id","issueContainer","issueText","text","menuOption","refreshButton","buttonText"],"sources":["/home/dom/React-native-IsuesLoger/crud/Read.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, FlatList, Button, Alert, TouchableOpacity } from 'react-native';\nimport axios from 'axios';\nimport Update from './Update'; // Import the Update component\nimport Updatestyle from '../style/Updatestyle';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { Menu, MenuTrigger, MenuOptions, MenuOption } from 'react-native-popup-menu'; // Add this import statement\n\nconst Read = ({ navigation }) => {\n  const [issues, setIssues] = useState([]);\n  const [selectedIssue, setSelectedIssue] = useState(null);\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  useEffect(() => {\n    fetchIssues();\n  }, [refreshKey]);\n\n  const fetchIssues = async () => {\n    try {\n      const response = await axios.get('https://crudcrud.com/api/24c4607bd64f47aea54d99701af5e0eb/read');\n      if (response.status === 200) {\n        setIssues(response.data);\n      } else {\n        Alert.alert('Error', 'Failed to fetch issues');\n      }\n    } catch (error) {\n      console.error('Error fetching issues:', error);\n      Alert.alert('Error', 'An error occurred');\n    }\n  };\n\n  const deleteIssue = async (id) => {\n    try {\n      const response = await axios.delete(`https://crudcrud.com/api/24c4607bd64f47aea54d99701af5e0eb/read/${id}`);\n      if (response.status === 200) {\n        fetchIssues(); // Refresh the list after deletion\n      } else {\n        Alert.alert('Error', 'Failed to delete issue');\n      }\n    } catch (error) {\n      console.error('Error deleting issue:', error);\n      Alert.alert('Error', 'An error occurred while deleting the issue');\n    }\n  };\n\n  const handleUpdatePress = (issueId) => {\n    setSelectedIssue(issueId);\n  };\n\n  const handleCancelUpdate = () => {\n    setSelectedIssue(null);\n  };\n\n  const handleRefresh = () => {\n    setRefreshKey((prevKey) => prevKey + 1);\n  };\n\n  return (\n    <View style={Updatestyle.container}>\n      <Text style={Updatestyle.heading}>Issues:</Text>\n      <FlatList\n        data={issues}\n        keyExtractor={(item) => item._id}\n        renderItem={({ item }) => (\n          <View style={Updatestyle.issueContainer}>\n            <Text style={Updatestyle.issueText}>{item.text}</Text>\n            <Menu>\n              <MenuTrigger>\n                <TouchableOpacity>\n                  <Icon name=\"ellipsis-v\" size={20} color=\"black\" />\n                </TouchableOpacity>\n              </MenuTrigger>\n              <MenuOptions>\n                <MenuOption onSelect={() => handleUpdatePress(item._id)} text=\"Update\">\n                  <Text style={Updatestyle.menuOption}><Icon name=\"pencil\" size={15} color=\"black\" /></Text>\n                </MenuOption>\n                <MenuOption onSelect={() => deleteIssue(item._id)} text=\"Delete\">\n                  <Text style={Updatestyle.menuOption}><Icon name=\"trash-o\" size={15} color=\"red\" /></Text>\n                </MenuOption>\n              </MenuOptions>\n            </Menu>\n          </View>\n        )}\n      />\n      <TouchableOpacity style={Updatestyle.refreshButton} onPress={handleRefresh}>\n        <Text style={Updatestyle.buttonText}>Refresh</Text>\n      </TouchableOpacity>\n\n      {selectedIssue && (\n        <Update\n          issueId={selectedIssue}\n          refreshRead={handleRefresh}\n          onCancel={handleCancelUpdate}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default Read;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}