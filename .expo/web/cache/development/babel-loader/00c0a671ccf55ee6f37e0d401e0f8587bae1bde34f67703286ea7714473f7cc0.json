{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Createstyle from \"../style/Createstyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Create = function Create(_ref) {\n  var navigation = _ref.navigation,\n    refreshRead = _ref.refreshRead;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    issueText = _useState2[0],\n    setIssueText = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    issues = _useState4[0],\n    setIssues = _useState4[1];\n  var fetchIssues = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('https://crudcrud.com/api/9ac036badf0e4c6c9271c7bbd52e3ad1/creating');\n        if (response.ok) {\n          var data = yield response.json();\n          setIssues(data);\n        } else {\n          console.error('Failed to fetch issues. Status:', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching issues:', error.message);\n      }\n    });\n    return function fetchIssues() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (refreshRead) {\n      fetchIssues();\n    }\n  }, [refreshRead]);\n  var createIssue = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('https://crudcrud.com/api/9ac036badf0e4c6c9271c7bbd52e3ad1/creating', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: issueText\n          })\n        });\n        if (response.ok) {\n          refreshRead();\n          if (navigation && navigation.goBack) {\n            navigation.goBack();\n          } else {\n            console.error('Navigation object or goBack method is undefined');\n          }\n        } else {\n          console.error('Failed to create issue. Status:', response.status);\n        }\n      } catch (error) {\n        console.error('Error creating issue:', error.message);\n      }\n    });\n    return function createIssue() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: Createstyle.container,\n    children: [_jsx(TextInput, {\n      style: Createstyle.input,\n      placeholder: \"Create Issue\",\n      value: issueText,\n      onChangeText: function onChangeText(text) {\n        return setIssueText(text);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: Createstyle.button,\n      onPress: createIssue,\n      children: _jsx(Text, {\n        style: Createstyle.buttonText,\n        children: \"Submit\"\n      })\n    })]\n  });\n};\nexport default Create;","map":{"version":3,"names":["React","useState","useEffect","Createstyle","Create","navigation","refreshRead","issueText","setIssueText","issues","setIssues","fetchIssues","response","fetch","ok","data","json","console","error","status","message","createIssue","method","headers","body","JSON","stringify","text","goBack","container","input","button","buttonText"],"sources":["/home/dom/React-native-IsuesLoger/crud/Create.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, TextInput, TouchableOpacity, Text } from 'react-native';\nimport Createstyle from '../style/Createstyle';\n\nconst Create = ({ navigation, refreshRead }) => {\n  const [issueText, setIssueText] = useState('');\n\n  // Assuming you need to manage issues in state\n  const [issues, setIssues] = useState([]);\n\n  const fetchIssues = async () => {\n    try {\n      const response = await fetch('https://crudcrud.com/api/9ac036badf0e4c6c9271c7bbd52e3ad1/creating');\n      if (response.ok) {\n        const data = await response.json();\n        // Set the fetched issues to the state\n        setIssues(data);\n      } else {\n        console.error('Failed to fetch issues. Status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching issues:', error.message);\n    }\n  };\n\n  useEffect(() => {\n    // This effect runs whenever the 'refreshRead' prop changes (i.e., when the 'Read' component needs to refresh)\n    if (refreshRead) {\n      // Refresh the 'Read' component data\n      fetchIssues();\n    }\n  }, [refreshRead]);\n\n  const createIssue = async () => {\n    try {\n      const response = await fetch('https://crudcrud.com/api/9ac036badf0e4c6c9271c7bbd52e3ad1/creating', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text: issueText }),\n      });\n\n      if (response.ok) {\n        // Trigger the refresh of the 'Read' component by invoking the 'refreshRead' callback\n        refreshRead();\n        // Ensure navigation object is defined and has the goBack method\n        if (navigation && navigation.goBack) {\n          navigation.goBack(); // Navigate back to the Read screen or any other desired screen\n        } else {\n          console.error('Navigation object or goBack method is undefined');\n        }\n      } else {\n        console.error('Failed to create issue. Status:', response.status);\n        // Handle other status codes if needed\n      }\n    } catch (error) {\n      console.error('Error creating issue:', error.message);\n      // Handle other errors, such as network issues\n    }\n  };\n\n  return (\n    <View style={Createstyle.container}>\n      {/* <Text style={Createstyle.title}>Create Issue</Text> */}\n      <TextInput\n        style={Createstyle.input}\n        placeholder=\"Create Issue\"\n        value={issueText}\n        onChangeText={(text) => setIssueText(text)}\n      />\n      <TouchableOpacity style={Createstyle.button} onPress={createIssue}>\n        <Text style={Createstyle.buttonText}>Submit</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default Create;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAEnD,OAAOC,WAAW;AAA6B;AAAA;AAE/C,IAAMC,MAAM,GAAG,SAATA,MAAM,OAAoC;EAAA,IAA9BC,UAAU,QAAVA,UAAU;IAAEC,WAAW,QAAXA,WAAW;EACvC,gBAAkCL,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvCM,SAAS;IAAEC,YAAY;EAG9B,iBAA4BP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjCQ,MAAM;IAAEC,SAAS;EAExB,IAAMC,WAAW;IAAA,8BAAG,aAAY;MAC9B,IAAI;QACF,IAAMC,QAAQ,SAASC,KAAK,CAAC,oEAAoE,CAAC;QAClG,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,IAAMC,IAAI,SAASH,QAAQ,CAACI,IAAI,EAAE;UAElCN,SAAS,CAACK,IAAI,CAAC;QACjB,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEN,QAAQ,CAACO,MAAM,CAAC;QACnE;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACE,OAAO,CAAC;MACxD;IACF,CAAC;IAAA,gBAbKT,WAAW;MAAA;IAAA;EAAA,GAahB;EAEDT,SAAS,CAAC,YAAM;IAEd,IAAII,WAAW,EAAE;MAEfK,WAAW,EAAE;IACf;EACF,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,IAAMe,WAAW;IAAA,8BAAG,aAAY;MAC9B,IAAI;QACF,IAAMT,QAAQ,SAASC,KAAK,CAAC,oEAAoE,EAAE;UACjGS,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,IAAI,EAAEpB;UAAU,CAAC;QAC1C,CAAC,CAAC;QAEF,IAAIK,QAAQ,CAACE,EAAE,EAAE;UAEfR,WAAW,EAAE;UAEb,IAAID,UAAU,IAAIA,UAAU,CAACuB,MAAM,EAAE;YACnCvB,UAAU,CAACuB,MAAM,EAAE;UACrB,CAAC,MAAM;YACLX,OAAO,CAACC,KAAK,CAAC,iDAAiD,CAAC;UAClE;QACF,CAAC,MAAM;UACLD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEN,QAAQ,CAACO,MAAM,CAAC;QAEnE;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;MAEvD;IACF,CAAC;IAAA,gBA3BKC,WAAW;MAAA;IAAA;EAAA,GA2BhB;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAElB,WAAW,CAAC0B,SAAU;IAAA,WAEjC,KAAC,SAAS;MACR,KAAK,EAAE1B,WAAW,CAAC2B,KAAM;MACzB,WAAW,EAAC,cAAc;MAC1B,KAAK,EAAEvB,SAAU;MACjB,YAAY,EAAE,sBAACoB,IAAI;QAAA,OAAKnB,YAAY,CAACmB,IAAI,CAAC;MAAA;IAAC,EAC3C,EACF,KAAC,gBAAgB;MAAC,KAAK,EAAExB,WAAW,CAAC4B,MAAO;MAAC,OAAO,EAAEV,WAAY;MAAA,UAChE,KAAC,IAAI;QAAC,KAAK,EAAElB,WAAW,CAAC6B,UAAW;QAAA,UAAC;MAAM;IAAO,EACjC;EAAA,EACd;AAEX,CAAC;AAED,eAAe5B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}