{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Updatestyle from \"../style/Updatestyle\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Read = function Read(_ref) {\n  var fetchedData = _ref.fetchedData,\n    updateIssue = _ref.updateIssue,\n    handleRefresh = _ref.handleRefresh;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedIssue = _useState2[0],\n    setSelectedIssue = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    updatedText = _useState4[0],\n    setUpdatedText = _useState4[1];\n  var deleteIssue = function () {\n    var _ref2 = _asyncToGenerator(function* (id) {\n      try {\n        var response = yield axios.delete(`https://crudcrud.com/api/1ec73a99fe1b4ce8847935104fa42b4f/read/${id}`);\n        if (response.status === 200) {\n          console.log('Successfully deleted issue:', id);\n          handleRefresh();\n        } else {\n          console.error('Failed to delete issue. Status:', response.status);\n        }\n      } catch (error) {\n        console.error('Error deleting issue:', error);\n      }\n    });\n    return function deleteIssue(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleDeleteIssue = function handleDeleteIssue(id) {\n    Alert.alert('Confirm Delete', 'Are you sure you want to delete this issue?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      onPress: function onPress() {\n        return deleteIssue(id);\n      }\n    }]);\n  };\n  var handleUpdatePress = function handleUpdatePress(issueId) {\n    var _fetchedData$find;\n    setSelectedIssue(issueId);\n    var selectedIssueText = (_fetchedData$find = fetchedData.find(function (issue) {\n      return issue._id === issueId;\n    })) == null ? void 0 : _fetchedData$find.text;\n    setUpdatedText(selectedIssueText || '');\n  };\n  var handleCancelUpdate = function handleCancelUpdate() {\n    setSelectedIssue(null);\n    setUpdatedText('');\n  };\n  var handleUpdateIssue = function handleUpdateIssue() {\n    if (selectedIssue !== null && updatedText.trim() !== '') {\n      updateIssue(selectedIssue, updatedText);\n    }\n  };\n  return _jsxs(View, {\n    style: Updatestyle.container,\n    children: [_jsx(Text, {\n      style: Updatestyle.heading,\n      children: \"Issues:\"\n    }), _jsx(FlatList, {\n      data: fetchedData,\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsxs(View, {\n          style: Updatestyle.issueContainer,\n          children: [_jsx(Text, {\n            style: Updatestyle.issueText,\n            children: item.text\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return handleUpdatePress(item._id);\n            },\n            children: _jsx(Text, {\n              style: Updatestyle.button,\n              children: _jsx(Icon, {\n                name: \"pencil\",\n                size: 15,\n                color: \"black\"\n              })\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return handleDeleteIssue(item._id);\n            },\n            children: _jsx(Text, {\n              style: Updatestyle.button,\n              children: _jsx(Icon, {\n                name: \"trash-o\",\n                size: 15,\n                color: \"red\"\n              })\n            })\n          })]\n        });\n      }\n    }), _jsx(TouchableOpacity, {\n      style: Updatestyle.refreshButton,\n      onPress: handleRefresh,\n      children: _jsx(Text, {\n        style: Updatestyle.buttonText,\n        children: \"Refresh\"\n      })\n    }), selectedIssue !== null && _jsxs(View, {\n      style: Updatestyle.updateContainer,\n      children: [_jsx(TextInput, {\n        style: Updatestyle.input,\n        placeholder: \"Enter updated text\",\n        value: updatedText,\n        onChangeText: function onChangeText(text) {\n          return setUpdatedText(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: Updatestyle.refreshButton,\n        onPress: handleUpdateIssue,\n        children: _jsx(Text, {\n          style: Updatestyle.buttonText,\n          children: \"Update\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: Updatestyle.refreshButton,\n        onPress: handleCancelUpdate,\n        children: _jsx(Text, {\n          style: Updatestyle.buttonText,\n          children: \"Cancel\"\n        })\n      })]\n    })]\n  });\n};\nexport default Read;","map":{"version":3,"names":["React","useState","Updatestyle","Icon","Read","fetchedData","updateIssue","handleRefresh","selectedIssue","setSelectedIssue","updatedText","setUpdatedText","deleteIssue","id","response","axios","delete","status","console","log","error","handleDeleteIssue","Alert","alert","text","style","onPress","handleUpdatePress","issueId","selectedIssueText","find","issue","_id","handleCancelUpdate","handleUpdateIssue","trim","container","heading","item","issueContainer","issueText","button","refreshButton","buttonText","updateContainer","input"],"sources":["/home/dom/React-native-IsuesLoger/crud/Read.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, FlatList, TextInput, TouchableOpacity, Alert } from 'react-native';\nimport Updatestyle from '../style/Updatestyle';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst Read = ({ fetchedData, updateIssue, handleRefresh }) => {\n  const [selectedIssue, setSelectedIssue] = useState(null);\n  const [updatedText, setUpdatedText] = useState('');\n\n  const deleteIssue = async (id) => {\n    try {\n      const response = await axios.delete(`https://crudcrud.com/api/1ec73a99fe1b4ce8847935104fa42b4f/read/${id}`);\n      if (response.status === 200) {\n        console.log('Successfully deleted issue:', id);\n        handleRefresh(); // Refresh the list after deletion\n      } else {\n        console.error('Failed to delete issue. Status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error deleting issue:', error);\n    }\n  };\n\n  const handleDeleteIssue = (id) => {\n    Alert.alert(\n      'Confirm Delete',\n      'Are you sure you want to delete this issue?',\n      [\n        {\n          text: 'Cancel',\n          style: 'cancel',\n        },\n        {\n          text: 'Delete',\n          onPress: () => deleteIssue(id),\n        },\n      ],\n    );\n  };\n\n  const handleUpdatePress = (issueId) => {\n    setSelectedIssue(issueId);\n    const selectedIssueText = fetchedData.find((issue) => issue._id === issueId)?.text;\n    setUpdatedText(selectedIssueText || '');\n  };\n\n  const handleCancelUpdate = () => {\n    setSelectedIssue(null);\n    setUpdatedText('');\n  };\n\n  const handleUpdateIssue = () => {\n    if (selectedIssue !== null && updatedText.trim() !== '') {\n      updateIssue(selectedIssue, updatedText);\n    }\n  };\n\n  return (\n    <View style={Updatestyle.container}>\n      <Text style={Updatestyle.heading}>Issues:</Text>\n      <FlatList\n        data={fetchedData}\n        keyExtractor={(item) => item._id}\n        renderItem={({ item }) => (\n          <View style={Updatestyle.issueContainer}>\n            <Text style={Updatestyle.issueText}>{item.text}</Text>\n            <TouchableOpacity onPress={() => handleUpdatePress(item._id)}>\n              <Text style={Updatestyle.button}><Icon name=\"pencil\" size={15} color=\"black\" /></Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => handleDeleteIssue(item._id)}>\n              <Text style={Updatestyle.button}><Icon name=\"trash-o\" size={15} color=\"red\" /></Text>\n            </TouchableOpacity>\n          </View>\n        )}\n      />\n      <TouchableOpacity style={Updatestyle.refreshButton} onPress={handleRefresh}>\n        <Text style={Updatestyle.buttonText}>Refresh</Text>\n      </TouchableOpacity>\n\n      {selectedIssue !== null && (\n        <View style={Updatestyle.updateContainer}>\n          <TextInput\n            style={Updatestyle.input}\n            placeholder=\"Enter updated text\"\n            value={updatedText}\n            onChangeText={(text) => setUpdatedText(text)}\n          />\n          <TouchableOpacity style={Updatestyle.refreshButton} onPress={handleUpdateIssue}>\n            <Text style={Updatestyle.buttonText}>Update</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={Updatestyle.refreshButton} onPress={handleCancelUpdate}>\n            <Text style={Updatestyle.buttonText}>Cancel</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default Read;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}